
@model SortingFilteringPaging.Models.CustomerViewModel;

@{
    ViewData["Title"] = "Index";
}


<p>
    <a asp-action="Create">Create New</a>
</p>

<h5>Total Customers:  @Model.AllRecords </h5>

<form asp-action="Index" method="get">
    <div class="form-row align-items-center">
        <div class="col-auto">
            <input type="text" name="SearchString" class="form-control mb-2 d-inline" value="@Model.SearchString" placeholder="...Search" />
        </div>

        <div class="col-auto">
            <input type="submit" onclick="SearchReset()" name="" value="Search" class="btn btn-success mb-2" />
        </div>

        <div class="dropdown">
            <label for="ItemsInPage">Records per page</label>
            <select name="ItemsInPage">
                <option value="@Model.ItemsPerPage">@Model.ItemsPerPage</option>
                <option value="5">5</option>
                <option value="10">10</option>
                <option value="25">25</option>
                <option value="50">50</option>
                <option value="100">100</option>
                <option value="250">250</option>
                <option value="500">500</option>
                <option value="1000">1000</option>
            </select>
        </div>

        <div class="col-auto">
            <input id="SkipValue" type="hidden" name="SkipValue" value="@Model.SkipValue" class="btn btn-info mb-2 SmallText" />
            @{
                int currentShowing = @Model.SkipValue + @Model.ItemsPerPage;
            }
            <h6>Current showing between: @Model.SkipValue and @currentShowing   </h6>

        </div>

    </div>


    <div>
        <input type="submit" name="Page" value="1" class="btn btn-info mb-2 DisableBTN1" />
        <input type="submit" name="Paging" value="Previous" class="btn btn-info mb-2 DisableBTN1" />

        <div class="pagination d-inline-block">
            @{
                int j = @Model.SkipValue / @Model.ItemsPerPage;
                int lastPage = @Model.AllRecords / Model.ItemsPerPage + 1;
            }

            @{

                for (int i = j - 5; i < 8 + j; i++)
                {
                    if (i > 0 && i < lastPage + 1)
                    {
                        if (i == @Model.SkipValue / @Model.ItemsPerPage + 1)
                        {
                            <input type="submit" name="Page" value="@i" class="btn btn-success mb-2" />


                        }
                        else
                        {
                            <input type="submit" name="Page" value="@i" class="btn btn-info mb-2" />
                        }


                    }

                }

            }

        </div>
        <input type="submit" name="Paging" value="Next" class="btn btn-info mb-2 DisableBTN2" />
        <input type="submit" name="Page" value="@lastPage" class="btn btn-info mb-2 DisableBTN2" />
    </div>

    <div>
        <p>Sort by: @Model.Sorting</p>
    </div>


    <table class="table">
        <thead>
            <tr>
                <th>
                    <input type="submit" name="Sorting" onclick="SearchReset()" value="@Html.DisplayNameFor(model => model.Customers[0].FirstName)" class="" />
                </th>
                <th>
                    <input type="submit" name="Sorting" onclick="SearchReset()" value="@Html.DisplayNameFor(model => model.Customers[0].LastName)" class="" />
                </th>
                <th>
                    <input type="submit" name="Sorting" onclick="SearchReset()" value="@Html.DisplayNameFor(model => model.Customers[0].MaleFemale)" class="" />
                </th>
                <th>
                    <input type="submit" name="Sorting" onclick="SearchReset()" value="@Html.DisplayNameFor(model => model.Customers[0].Age)" class="" />
                </th>
                <th>
                    <input type="submit" name="Sorting" onclick="SearchReset()" value="@Html.DisplayNameFor(model => model.Customers[0].PhoneNumber)" class="" />
                </th>
                <th>
                    <input type="submit" name="Sorting" onclick="SearchReset()" value="@Html.DisplayNameFor(model => model.Customers[0].EmailAddress)" class="" />
                </th>
                <th>
                    <input type="submit" name="Sorting" onclick="SearchReset()" value="@Html.DisplayNameFor(model => model.Customers[0].City)" class="" />
                </th>
                <th>
                    <input type="submit" name="Sorting" onclick="SearchReset()" value="@Html.DisplayNameFor(model => model.Customers[0].Street)" class="" />
                </th>
                <th>
                    <input type="submit" name="Sorting" onclick="SearchReset()" value="@Html.DisplayNameFor(model => model.Customers[0].HouseNr)" class="" />
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Customers)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MaleFemale)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Age)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PhoneNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EmailAddress)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.City)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Street)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HouseNr)
                    </td>
                    @*<td>
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </td>*@
                </tr>
            }
        </tbody>
    </table>





    <input id="SortingValue" type="hidden" name="Sorting" value="@Model.Sorting" /> @*has to be in the very end to pass the value if no other sort by selected*@

    <input id="LastPage" type="hidden" value="@Model.LastPage" />
    <input id="FirstPage" type="hidden" value="@Model.FirsPage" />



</form>




<script>

    var LastPageAndNextPge = document.querySelectorAll(".DisableBTN2")

    if (document.querySelector("#LastPage").value) {
        for(var i = 0; i < LastPageAndNextPge.length; i++) {
            LastPageAndNextPge[i].disabled = true;
        }  
    }
    else {
        for (var i = 0; i < LastPageAndNextPge.length; i++) {
         LastPageAndNextPge[i].disabled = false;
        }      
    }

    var FirsPageAndPriviousPage = document.querySelectorAll(".DisableBTN1")

    if (document.querySelector("#FirstPage").value) {
        for(var i = 0; i < FirsPageAndPriviousPage.length; i++) {
            FirsPageAndPriviousPage[i].disabled = true;
        }  
    }
    else {
        for (var i = 0; i < FirsPageAndPriviousPage.length; i++) {
         FirsPageAndPriviousPage[i].disabled = false;
        }      
    }






    function SearchReset() {
        document.querySelector("#SkipValue").value = 0;
        document.querySelector("#SortingValue").value = null;

    }

    // Fuction to hide content
    function HideContent() {
        var x = document.querySelector(".DivToHide")
        if (x.style.display === "none") {
            x.style.display = "block";
        } else {
            x.style.display = "none";
        }
    }



</script>

<style>
    .SmallText {
        width: 100px;
    }

  
</style>


